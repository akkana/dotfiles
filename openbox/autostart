#!/bin/sh

# Figure out whether we're in a docking station or not, and adjust
# the display accordingly.
# http://www.linuxquestions.org/questions/slackware-14/automating-xorg-randr-turning-laptop-screen-off-if-external-monitor-is-connected-779386/
# http://it-tactics.blogspot.com/2010/08/ubuntu-1004-with-docking-station.html

# Check whether the external monitor is connected: returns 0 on success
hostname=$(hostname)
if [ $hostname = hesiodus ]; then
  # Make the F1 key another Escape
  xmodmap -e 'keycode 67 = Escape'

  moncycle

elif [ $hostname = 'petit' ]; then
  # setxkbmap -option ctrl:nocaps
  setxkbmap -option 'ctrl:nocaps,compose:menu,terminate:ctrl_alt_bksp'
  geom=80x45-0-0

elif [ $hostname = 'charon' ]; then
  moncycle
  geom=80x50-0-0

  # Set initial volume low
  amixer sset PCM 165

  # Disable all taps:
  synclient TapButton1=0 TapButton2=0 TapButton3=0 HorizEdgeScroll=1

else
  # Not hesiodus or charon, probably a 1366x768 laptop
  geom=80x45-0-0
fi

# xemacs -geometry 80x66+146-0 &
#
# Spare terminal: start it early, so it won't end up with focus.
#(LANG=C rxvt -geometry 80x39-0+0) &

# For window managers that don't have image support:
#(xsetbg -fullscreen -border black `find -L $HOME/Backgrounds -name "*.*" | randomline`) &
#(hsetroot -center `find -L $HOME/Backgrounds -name "*.*" | randomline`) &
#echo "Running randombg:" `date` >/tmp/xinit.log
/home/akkana/bin/randombg &

# Don't do this: if there's no xdb then apps should read the .Xdefaults file,
# mostly.
# xrdb -l .Xdefaults

# Xmodmap hopefully not needed if we have /etc/default/keyboard
# xmodmap .Xmodmap

# Make the terminal window the last X app to come up, so it gets focus.
# Use a UTF-8 terminal for mail. (Obsolete, that's the default now.)
#(LANG=en_US.UTF-8 xterm -geometry $geom) &
echo "Starting" urxvt -geometry $geom
urxvt -geometry $geom &

# In Pangolin, somehow setting this option in /etc/default/keyboard
# doesn't do the job. setxkbmap -query says it's set, and it works
# in consoles, but it doesn't work in X.
# But for some reason, setting it again via setxkbmap does work.
# Sometimes. Maybe.
#setxkbmap -option 'ctrl:nocaps'
setxkbmap -option 'ctrl:nocaps,compose:menu,terminate:ctrl_alt_bksp'

# How to prepare the way for ssh-agent, supposedly (but doesn't work reliably):
# ssh-add /path/to/ssh.key &

###################################################
# Asus Trackpad insanity:
if [ -x $(command -v xinput) -a $hostname = 'iridum' ]; then
  echo we have xinput
  # My new Logitech mouse is too fast. Set it to be slower like this:
  mouseid=$(xinput list | grep Mouse | sed 's/.*id=\([0-9]*\).*/\1/')
  xinput set-prop $mouseid $(xinput list-props $mouseid | grep 'Constant Deceleration' | sed 's/.* Deceleration (\([0-9]*\)).*/\1/') 2

  tp=$(xinput | grep Touchpad | sed -e 's/.*=//' -e 's/\t.*//')
  if [ x$tp != x ]; then
    echo "Setting some touchpad settings"

    # The Asus' touchpad just doesn't register two-finger-taps most of the time
    # and is so sensitive to palms that I can't type if taps are enabled,
    # so I defined F1-F3 as mouse buttons.
    # But that turned out to be so handy, now I do that on every small laptop:
    if [ x$geom = 'x80x45-0-0' ]; then
      echo "Setting Fn keys as mouse buttons"

      synclient TapButton1=0 TapButton2=0 TapButton3=0 HorizEdgeScroll=1

      xmodmap -e "keysym F1 = Pointer_Button1"
      xmodmap -e "keysym F2 = Pointer_Button2"
      xmodmap -e "keysym F3 = Pointer_Button3"

      xkbset m
      # I'm not clear on why I need the next line, but saw it recommended.
      # exp is expire, but man xkbset doesn't explain what that means.
      xkbset exp =m
    fi

    echo hostname: $hostname
    # XXX Adding charon to this hostname check doesn't work,
    # should try to figure that out.
    if [ $hostname = iridum ]; then
      # Disable all taps:
      synclient TapButton1=0 TapButton2=0 TapButton3=0 HorizEdgeScroll=1

    else
      synclient TapButton1=1 TapButton2=3 TapButton3=2 HorizEdgeScroll=1

      echo "Trackpad on $tp"

      # This doesn't help at all:
      xinput set-prop $tp "Synaptics Palm Detection" 1
      xinput set-prop $tp "Synaptics Palm Dimensions" 3, 3

      # These override the xinput stuff above, but maybe that's okay
      # since it doesn't work anyway:
      synclient PalmDetect=True
      synclient PalmMinWidth=4
      synclient PalmMinZ=50

      # Those actually don't do much either; let's see how we do
      # with syndaemon with a short timeout.
      syndaemon -K -i 0.9 -R -d
    fi

  else
    echo no touchpad
  fi
else
  echo no xinput
fi

